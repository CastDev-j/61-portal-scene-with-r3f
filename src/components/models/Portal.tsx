/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, type JSX } from "react";
import {
  Center,
  useGLTF,
  useTexture,
} from "@react-three/drei";
import type { GLTF } from "three-stdlib";
import { DoubleSide, type Mesh } from "three";

import { extend, useFrame } from "@react-three/fiber";

import { Color } from "three";
import { useControls } from "leva";
import { PortalMaterial } from "../materials/portalMaterial";

type GLTFResult = GLTF & {
  nodes: {
    poleLightA: Mesh;
    portalLight: Mesh;
    poleLightB: Mesh;
    baked: Mesh;
  };
};

extend({ PortalMaterial });

export const Portal = (props: JSX.IntrinsicElements["group"]) => {
  const portalRef = useRef<{
    uTime: number;
  }>(null!);

  const { nodes } = useGLTF("/model/portal.glb") as unknown as GLTFResult;
  const texture = useTexture("/model/baked.jpg", (texture) => {
    texture.flipY = false;
  });

  useFrame((state) => {
    const currentTime = state.clock.elapsedTime;

    portalRef.current.uTime = currentTime;
  });

  const { colorStart, colorEnd } = useControls("Portal Material", {
    colorStart: {
      value: "#383838",
      label: "Start Color",
    },
    colorEnd: {
      value: "#b4b4fe",
      label: "End Color",
    },
  });

  return (
    <Center>
      <group {...props} dispose={null}>
        <mesh
          geometry={nodes.poleLightA.geometry}
          position={nodes.poleLightA.position}
          rotation={nodes.poleLightA.rotation}
          scale={nodes.poleLightA.scale}
        >
          <meshBasicMaterial color={"#ffffb7"} />
        </mesh>
        <mesh
          geometry={nodes.poleLightB.geometry}
          position={nodes.poleLightB.position}
          rotation={nodes.poleLightB.rotation}
          scale={nodes.poleLightB.scale}
        >
          <meshBasicMaterial color={"#ffffb7"} />
        </mesh>
        <mesh
          geometry={nodes.portalLight.geometry}
          position={nodes.portalLight.position}
          rotation={nodes.portalLight.rotation}
          scale={nodes.portalLight.scale}
        >
          <portalMaterial
            ref={portalRef}
            uTime={0}
            uColorStart={new Color(colorStart)}
            uColorEnd={new Color(colorEnd)}
            side={DoubleSide}
          />
        </mesh>

        <mesh geometry={nodes.baked.geometry}>
          <meshBasicMaterial map={texture} />
        </mesh>

        <mesh position={[0, -0.06, 0]}>
          <boxGeometry args={[4, 0.1, 4]} />
          <meshBasicMaterial color={"#171717"} side={DoubleSide} />
        </mesh>
      </group>
    </Center>
  );
};

useGLTF.preload("/portal.glb");
